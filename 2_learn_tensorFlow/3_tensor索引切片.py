'''
索引，即index

'''

import tensorflow as tf

'''

# 基础的索引，
a1 = tf.ones([1, 5, 5, 3]) # 创建一个4维的矩阵
a11 = a1[0][0] # 通过[0][0]索引，从4维的得到一个2维的矩阵
print(a11)

a111 = a1[0][0][0] # 通过[0][0][0]索引，从4维的得到一个1维的矩阵
print(a111)

a1111 = a1[0][0][0][1] # 通过[0][0][0][1]索引，从4维的得到一个0维的标量
print(a1111)


# numpy方式的索引,即用逗号分隔索引，
a2 = tf.random.normal([2, 3, 3, 5]) # 4维矩阵
print(a2)
# 利用[index1, index2, index3] 功能和[index1][index2][index3]一样
a22 = a2[0, 1, 2, 1].shape
print(a22)

'''

'''
切片 [start:end:step]含头不含尾的切片 ，start或者end省略就是起始和结束。step代表步长
'''


a3 = tf.range(10)
print(a3)

a31 = a3[1:5]
print(a31)

a32 = a3[-1:] # -1就是从右边数第1个
print(a32)

a33 = a3[:5]
print(a33)

a34 = a3[:-1] # 从头到右边第1个，
print(a34)

# 如果只写冒号，start和end都不写，那么就是全部都取
a35 = a3[:]
print(a35)

a2 = tf.random.normal([2, 3, 3, 5]) # 4维矩阵
a21 = a2[0, :, :, :]  # 和a[0]是一样的  shape=[3, 3, 5]
print(a21.shape)
a22 = a2[0, 1, :, :] # 第1维度取0,第2维度取1,第3、4维度全取, 结果shape=[3, 5]
print(a22.shape)
a23 = a2[:, 1, 2, :] # 第1、4维度全取,第2维度取1,第3维度取2, 结果shape=[2, 5]
print(a23.shape)

# 步长为2
a36 = a3[0: 7: 2]
print(a36)

a37 = a3[::2] # 从头到尾，每隔2取一次
print(a37)

a24 = a2[::2, 1, 2, :] # 第1维度每隔2取一次,所以个数除2,第4维度全取,第2维度取1,第3维度取2, 结果shape=[1, 5]
print(a24.shape)

a38 = a3[5 :1 :-1] # 负步长就是逆序。步长为负是，start在end的右边。
print(a38)

# ...可以代表若干: ，一种简写方法
a24 = a2[1,...]  # 和a2[1, :, :, :]是一样的
a25 = a2[1,...,2]  # 和a2[1, :, :, 2]是一样的
a26 = a2[1,...,2, :]  # 和a2[1, :, 2, :]是一样的
